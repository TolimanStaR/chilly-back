services:

  main_db:
    image: postgres:alpine
    volumes:
      - main_pg_volume:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: "${MAIN_DB}"
      POSTGRES_USER: "${MAIN_USER}"
      POSTGRES_PASSWORD: "${MAIN_PASSWORD}"
    restart: unless-stopped
    command:
      - "-p ${MAIN_DB_PORT}"
    networks:
      - chilly-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${MAIN_USER} -d ${MAIN_DB} -p ${MAIN_DB_PORT}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 7s

  security_db:
    image: postgres:alpine
    volumes:
      - security_pg_volume:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: "${SEC_DB}"
      POSTGRES_USER: "${SEC_USER}"
      POSTGRES_PASSWORD: "${SEC_PASSWORD}"
    restart: unless-stopped
    command:
      - "-p ${SEC_DB_PORT}"
    networks:
      - chilly-net
    ports:
      - "${SEC_DB_PORT}:${SEC_DB_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${SEC_USER} -d ${SEC_DB} -p ${SEC_DB_PORT}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 7s

  places_db:
    image: postgis/postgis:17-3.5-alpine
    volumes:
      - places_pg_volume:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: "${PLACE_DB}"
      POSTGRES_USER: "${PLACE_USER}"
      POSTGRES_PASSWORD: "${PLACE_PASSWORD}"
    restart: unless-stopped
    command:
      - "-p ${PLACE_DB_PORT}"
    networks:
      - chilly-net
    ports:
      - "${PLACE_DB_PORT}:${PLACE_DB_PORT}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${PLACE_USER} -d ${PLACE_DB} -p ${PLACE_DB_PORT}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 7s

  eureka:
    image: "tolimanstar/chilly_discovery_server:latest"
    build:
      context: ./
      dockerfile: ./discovery-server/Dockerfile
    environment:
      SPRING_PROFILE_ACTIVE: docker
    networks:
      - chilly-net
    healthcheck:
      test: "curl --fail --silent --request GET http://eureka:8761/actuator/health | grep UP || exit 1"
      interval: 10s
      timeout: 7s
      retries: 7
      start_period: 15s

  main:
    depends_on:
      main_db:
        condition: service_healthy
      eureka:
        condition: service_healthy
    image: "tolimanstar/chilly_main:latest"
    build:
      context: ./
      dockerfile: ./main-svc/Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: docker
      MAIN_DB: "${MAIN_DB}"
      MAIN_HOST: main_db
      MAIN_USER: "${MAIN_USER}"
      MAIN_PASSWORD: "${MAIN_PASSWORD}"
      MAIN_DB_PORT: "${MAIN_DB_PORT}"
      GATEWAY_PORT: "${GATEWAY_PORT}"
    networks:
      - chilly-net

  security:
    depends_on:
      security_db:
        condition: service_healthy
      eureka:
        condition: service_healthy
    image: "tolimanstar/chilly_security:latest"
    build:
      context: ./
      dockerfile: ./security-svc/Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SEC_DB: "${SEC_DB}"
      SEC_HOST: security_db
      SEC_USER: "${SEC_USER}"
      SEC_PASSWORD: "${SEC_PASSWORD}"
      SEC_DB_PORT: "${SEC_DB_PORT}"
      JWT_SECRET_KEY: "${JWT_SECRET_KEY}"
      GATEWAY_PORT: "${GATEWAY_PORT}"
      EMAIL_USERNAME: "${EMAIL_USERNAME}"
      EMAIL_PASSWORD: "${EMAIL_PASSWORD}"
      DEF_ADMIN_USER: "${DEF_ADMIN_USER}"
      DEF_ADMIN_PASSWORD: "${DEF_ADMIN_PASSWORD}"
      DEF_ADMIN_PASSWORD_HASH: "${DEF_ADMIN_PASSWORD_HASH}"
    networks:
      - chilly-net

  places:
    depends_on:
      places_db:
        condition: service_healthy
      eureka:
        condition: service_healthy
    image: "tolimanstar/chilly_places:latest"
    build:
      context: ./
      dockerfile: ./places-svc/Dockerfile
    environment:
      SPRING_PROFILES_ACTIVE: docker
      PLACE_DB: "${PLACE_DB}"
      PLACE_HOST: places_db
      PLACE_USER: "${PLACE_USER}"
      PLACE_PASSWORD: "${PLACE_PASSWORD}"
      PLACE_DB_PORT: "${PLACE_DB_PORT}"
      GATEWAY_PORT: "${GATEWAY_PORT}"
    networks:
      - chilly-net

  gateway:
    depends_on:
      eureka:
        condition: service_healthy
    image: "tolimanstar/cilly_gateway:latest"
    build:
      context: ./
      dockerfile: ./api-gateway/Dockerfile
    ports:
      - "${GATEWAY_PORT}:${GATEWAY_PORT}"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      JWT_SECRET_KEY: "${JWT_SECRET_KEY}"
      GATEWAY_PORT: "${GATEWAY_PORT}"
      API_KEY: "${API_KEY}"
    networks:
      - chilly-net
    healthcheck:
      test: "curl --fail --silent --request GET http://gateway:${GATEWAY_PORT}/actuator/health | grep UP || exit 1"
      interval: 10s
      timeout: 7s
      retries: 7
      start_period: 15s

  rec:
    depends_on:
      eureka:
        condition: service_healthy
    image: "tolimanstar/chilly_rec:latest"
    environment:
      EUREKA_URL: "http://eureka:8761"
      REC_HOST: rec
    networks:
      - chilly-net

volumes:
  main_pg_volume:
  security_pg_volume:
  places_pg_volume:

networks:
  chilly-net: {}